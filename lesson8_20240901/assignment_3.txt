
1. 버퍼의 최대 크기가 100,000이라면 입력 중 새로운 패킷의 입력을 의미하는 양의 정수 역시 100,000개 이하로 주어진다. (X)
    => 양의 정수가 패칫이 처리되는 0이 빠르게 들어온다면 버퍼의 최대 크기 이상으로 들어와도 문제가 없다.

2. 버퍼에 패킷이 꽉 차있을 때 새로 입력된 패킷은 이후 기존 패킷이 처리되어 빈 자리가 생기면 다시 버퍼에 쌓인다. (X)
    => 문제에서 버퍼 공간이 다 찬 상태에서 들어오는 패킷은 모두 버려진다고 명시되어 있음
    => 즉, 버퍼가 다 찬 상태에서의 패킷은 무시된다.

3. 버퍼의 크기가 4인 라우터에 5개의 패킷이 차례로 입력되고, 3개의 패킷을 처리 후, 1개의 패킷이 입력되었다면 현재 버퍼에는 3개의 패킷이 남아있다. (X)
    => 버퍼 크기가 4이기에, 마지막 5번 패킷은 버려짐
    => 3개의 패킷 처리 후, 버퍼에서는 1개의 패킷이 남아있음
    => 이후 1개의 패킷이 추가로 입력되었다면, 버퍼에는 2개의 패킷이 남아있음

4. 버퍼가 비어있을 때 패킷 처리를 의미하는 0이 들어오는 경우는 없으므로, 패킷을 처리할때 버퍼에 남은 패킷이 있는지 확인하는 로직은 생략할 수 있다. (0)
    => 패킷을 처리함은 0의 입력을 받았음을 의미
    => 0이 입력되었음은 버퍼에 패킷이 존재함을 의미
    => 그렇기에 패킷을 처리할ㄸ꺠 버퍼가 비었는지 확인하는 로직은 불필요
