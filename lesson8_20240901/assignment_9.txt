
1. 전체 테스트 케이스에 주어지는 p의 길이의 합과 n의 합이 최대 70만이기 때문에, 시간복잡도가 이 둘에 의존한다면 제곱 복잡도보다 더 좋은 효율의 풀이가 필요하다. (O)
    => 또한 테스트 케이스 역시 최대 100이기에 제곱 복잡도보다 높은 효율이 필요하다

2. 에러를 확인하기 위해서는 입력을 받은 후 D 함수의 개수가 n보다 많은지를 확인하거나, 함수를 하나씩 수행하며 D 함수를 처리할 때 배열이 비어있는지를 먼저 확인하는 방법이 있다. (X)
    => 입력을 받으면서, 비어있는지에 대한 여부와 Reverse 여부를 미리 파악해야 빠른 시간효율 산출이 가능하다.
    => 입력받은 결과를 가공하려고 하면 시간복잡도가 제곱이 되면서 시간초과가 발생할 것

3. 뒤집기 함수가 두 번 연속 나오면 이는 원래대로 돌아오는 것이므로, 연속적으로 나오는 R함수가 홀수일때만 한 번 뒤집으면 뒤집기 수행 횟수가 root(P)이하로 줄어든다.
    => 뒤집기 함수가 짝수번 나오면 원래 입력이기에, 홀수일때만 재정렬의 시간복잡도가 소요도리 것이다.

4. "[]"배열에 "R" 함수를 수행하는 입력이 들어왔다면 올바른 출력은 "error"이다.
    => 비어있는 배열에 D 함수를 수행하면 error 를 출력하지만, R함수에 대한 언급은 없기에 빈배열을 출력해야 한다.