
1. 입력에서 주어지는 트리 상에서 연결되는 두 정점은 앞에 있는 정점이 뒤에 있는 정점의 부모임을 의미한다. (X)
    => 단순 두 정점의 연결관계를 보여주고 있음.
    => 부모 노드임을 판단하려면 입력을 받아 전체적인 구성을 보아야 함

2. 트리가 주어진다고 했기에, 모든 정점은 연결되어 있다. 따라서 루트인 1을 젱뢰하고는 부모가 없는 노드는 존재하지 않는다. (O)
    => 트리 구조이므로 자식노드가 없을수는 있어도, 부모노드가 없을수는 없다

3. 1번 노드를 제외하고 모든 입력에서 단 한번 밖에 등장하는 노드는 자식이 없는 노드로 출력에서 등장할 수 없다. (X)
    => 1번만 등장하는 노드는 트리의 leaf 노드이다
    => leaf 노드라고 부모가 없지 않으니 출력에 등장할 수 있다.

4. 노드간 연결정보를 N*N 2차월 배열에 기록하는 것은 N이 최대 100,000 일때 O(N^2) 의 메모리 복잡도를 필요하기에 사용 불가능하다. (O)
    => 이는 메모리 및 시간 복잡도를 감안하면 말이 안되는 연결정보이다.
    => 또한 모든 노드는 연결된 노드간의 정보만 담으면 되기에, 굳이 배열을 활용할 필요는 없다.
    => List 자료형을 활용한 동적 연결정보를 통해 문제풀이가 필요하다

5. 노드의 개수 다음 두번째줄부터 주어지는 입력 중 첫 두 정덤은 항상 루트인 1을 포함한다. (X)
    => 첫재줄부터 N-1 까지의 연결정보가 순차적으로 나오고 있다.
    => 그렇다고 해당 연결정보에 무조건 루트 1이 포함되어있다고 판단하기에는 조건이 타이트하지 않다고 보여짐...